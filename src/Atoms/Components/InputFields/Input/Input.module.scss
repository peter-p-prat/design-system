@use "@app/Foundations/theme/colors";
@use "@app/Foundations/theme/typography";
@use "@app/Foundations/theme/focusRings";
@use "@app/Foundations/theme/animations";
@use "@app/Foundations/theme/spacing";

.fieldWrapper {
  position: relative;
  display: flex;
  flex-direction: column;
  gap: spacing.gap(gap-1);

  &.disabled {
    opacity: 0.5;
  }
}

.label {
  @include typography.text(sm, medium);
  & {
    color: colors.palette(gray, 500);
    padding-left: spacing.gap(gap-1);
  }
}

.inputWrapper {
  position: relative;
}

.input {
  box-sizing: border-box;
  border: 1px solid colors.palette(gray, 50);
  border-radius: spacing.gap(gap-2);
  width: 100%;

  &:disabled {
    border: 1px solid colors.palette(gray, 50);
    background-color: colors.palette(neutral, white);

    &::placeholder {
      color: colors.palette(gray, 400);
    }
    color: colors.palette(gray, 400);

    &:hover {
      border: 1px solid colors.palette(gray, 50);
    }
  }

  &:hover {
    border: 1px solid colors.palette(primary, 300);
  }

  &:focus,
  &:focus-visible {
    outline: none;
    border: 1px solid colors.palette(primary, 300);
    box-shadow: focusRings.apply(primary, 25);
  }

  &.error {
    border: 1px solid colors.palette(error, 500);

    &:focus,
    &:focus-visible {
      box-shadow: focusRings.apply(error, 50);
    }
  }

  &.success {
    border: 1px solid colors.palette(success, 600);

    &:focus,
    &:focus-visible {
      box-shadow: focusRings.apply(success, 50);
    }
  }

  &.small {
    @include typography.text(sm, regular);
    & {
      padding: spacing.gap(gap-2) spacing.gap(gap-3);
    }

    &.withLeadingIcon {
      padding-left: spacing.gap(gap-10);
    }

    &.withTrailingIcon {
      padding-right: spacing.gap(gap-10);
    }

    &.withPrefixLabel {
      padding-left: calc(var(--leftExtraPadding) + spacing.gap(gap-4));
      box-sizing: border-box;
    }
  }

  &.medium {
    height: 44px;
    @include typography.text(md, regular);
    & {
      padding: spacing.gap(gap-2) spacing.gap(gap-4);
    }

    &.withLeadingIcon {
      padding-left: spacing.gap(gap-11);
    }

    &.withTrailingIcon {
      padding-right: spacing.gap(gap-11);
    }

    &.withPrefixLabel {
      padding-left: calc(var(--leftExtraPadding) + spacing.gap(gap-5));
      box-sizing: border-box;
    }
  }
}

.iconContainer {
  position: absolute;
  top: 0;
  height: 100%;
  width: 20px;
  padding: 0;
  border: none;
  background: transparent;
  display: flex;
  align-items: center;
  justify-content: center;

  &.leading {
    left: 0;

    &.small {
      margin: 0 spacing.gap(gap-2) 0 spacing.gap(gap-3);
    }

    &.medium {
      margin: 0 spacing.gap(gap-2) 0 spacing.gap(gap-4);
    }
  }

  &.trailing {
    right: 0;
    color: colors.palette(gray, 100);

    &.small {
      margin: 0 spacing.gap(gap-3) 0 spacing.gap(gap-2);
    }

    &.medium {
      margin: 0 spacing.gap(gap-4) 0 spacing.gap(gap-2);
    }
  }

  &.error {
    color: colors.palette(error, 500);
  }

  &.success {
    color: colors.palette(success, 600);
  }

  &.loading {
    color: colors.palette(primary, 500);
    @include animations.animation(spin, $duration: 1.5s, $timing-function: linear, $iteration-count: infinite);
  }
}

.iconButton {
  position: absolute;
  top: 0;
  height: 100%;
  width: 20px;
  padding: 0;
  border: none;
  background: transparent;
  display: flex;
  align-items: center;
  justify-content: center;
  cursor: pointer;

  &:disabled {
    cursor: not-allowed;
  }

  &.leading {
    left: 0;

    &.small {
      margin: 0 spacing.gap(gap-2) 0 spacing.gap(gap-3);
    }

    &.medium {
      margin: 0 spacing.gap(gap-2) 0 spacing.gap(gap-4);
    }
  }

  &.trailing {
    right: 0;
    color: colors.palette(gray, 100);

    &.small {
      margin: 0 spacing.gap(gap-3) 0 spacing.gap(gap-2);
    }

    &.medium {
      margin: 0 spacing.gap(gap-4) 0 spacing.gap(gap-2);
    }
  }
}

.feedbackMessage {
  @include typography.text(sm, regular);
  & {
    color: colors.palette(gray, 400);
    padding-left: spacing.gap(gap-1);
  }

  &.error {
    color: colors.palette(error, 500);
  }

  &.success {
    color: colors.palette(success, 600);
  }
}

.prefixLabel {
  @include typography.text(md, regular);
  & {
    color: colors.palette(gray, 200);
    position: absolute;
    top: 50%;
    left: spacing.gap(gap-3);
    transform: translateY(-50%);
    max-width: spacing.gap(gap-13);
    overflow: hidden;
    white-space: nowrap;
    text-overflow: ellipsis;
    text-transform: uppercase;
  }
}
