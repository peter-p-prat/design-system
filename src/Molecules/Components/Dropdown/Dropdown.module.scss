@use "@app/Foundations/theme/animations";
@use "@app/Foundations/theme/colors";
@use "@app/Foundations/theme/focusRings";
@use "@app/Foundations/theme/spacing";
@use "@app/Foundations/theme/shadows";
@use "@app/Foundations/theme/typography";
@use "@app/Foundations/theme/utils";

.formLabel {
  @include typography.text(sm, medium);
  & {
    display: inline-block;
    color: colors.palette(gray, 500);
    padding-left: spacing.gap(gap-1);
    margin-bottom: spacing.gap(gap-1);
  }

  &.light {
    color: colors.palette(neutral, white);
  }
}

.dropdown {
  @include typography.text(md, regular);
  & {
    position: relative;
    box-sizing: border-box;
  }

  &:focus-visible,
  .trigger:focus-visible {
    // Disable Chrome selection when focusing
    outline: none;
  }

  &.showInputBorder {
    .trigger {
      border: 1px solid rgba(colors.palette(gray, 50), 0.2);
    }
  }

  &.hasValue,
  &.opened {
    &:not(.light) {
      .trigger {
        &:not(.formTrigger):not(.hideSelectedInputBorder) {
          border: 1px solid colors.palette(primary, 300);
        }
      }
    }
  }

  &.opened {
    &:not(.triggerIconAnimationDisabled) .triggerIcon {
      transform: rotate(180deg);
    }
  }

  &.onlyTriggerIcon {
    width: 32px;
    height: 32px;
    display: flex;
    align-items: center;
    justify-content: center;

    .trigger {
      height: 100%;
      width: 100%;
      padding: 0;
      align-items: center;
      justify-content: center;
    }
  }

  &.iconAndTrigger {
    width: fit-content;
    display: flex;
    align-items: center;
    justify-content: center;

    .trigger {
      display: flex;
      align-items: center;
      height: 24px;
      padding: spacing.gap(gap-1) spacing.gap(gap-2);

      .label,
      .placeholder {
        margin: 0;
      }
    }
  }

  &.withCustomTrigger {
    width: fit-content;
  }

  &.disableTransparency {
    &:not(.light) {
      .trigger {
        background-color: colors.palette(neutral, white);
        color: colors.palette(gray, 500);
      }
    }
  }

  .trigger {
    display: flex;
    position: relative;
    justify-content: space-between;
    cursor: pointer;
    transition: all 200ms ease-in-out;
    padding: spacing.gap(gap-1) spacing.gap(gap-2) spacing.gap(gap-1)
      spacing.gap(gap-3);
    border: 1px solid transparent;
    border-radius: spacing.gap(gap-1);

    &.disabled {
      cursor: not-allowed;
    }

    &.formTrigger {
      border-radius: spacing.gap(gap-2);
      border-color: colors.palette(gray, 50);
      height: spacing.gap(gap-7);
      align-items: center;

      &.small {
        height: spacing.gap(gap-7);
      }

      &.medium {
        height: 34px;
      }

      &.large {
        height: 36px;
      }

      &:not(.disabled) {
        &:hover,
        &:active {
          border: 1px solid colors.palette(primary, 300);
        }

        &:active {
          box-shadow: focusRings.apply(primary, 25);
        }
      }
    }

    &:not(.disabled) {
      &:not(.light) {
        &:hover {
          background-color: colors.palette(primary, 25);
          color: colors.palette(gray, 500);
        }

        &:active {
          background-color: colors.palette(primary, 50);
          color: colors.palette(gray, 500);
        }
      }
    }

    &.light {
      color: colors.palette(bg, 1);

      &:not(.disabled) {
        &:hover {
          background-color: colors.palette(primary, 700);
        }

        &:active {
          background-color: colors.palette(primary, 700);
        }
      }
    }

    .label,
    .placeholder {
      margin-right: spacing.gap(gap-2);
    }

    .placeholder {
      @include typography.text(md, regular);
      & {
        color: colors.palette(gray, 200);
      }
    }

    .label {
      @include typography.text(md, medium);
    }

    .triggerIcon {
      color: var(--trigger-color, colors.palette(primary, 500));

      &:not(.disabled) {
        &:hover,
        &:active {
          border: none;
        }
      }

      &.light {
        color: colors.palette(bg, 1);
      }
    }
  }

  .searchInputContainer {
    padding: 0;
    &.desktopMode {
      padding: spacing.gap(gap-4) spacing.gap(gap-4) 0;
    }
  }

  .customTriggerWrapper {
    width: fit-content;
  }
}
